# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateUser {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
}

type AggregateVideo {
  _count: VideoCountAggregate
  _max: VideoMaxAggregate
  _min: VideoMinAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  createVideo(data: VideoCreateInput!): Video!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteManyVideo(where: VideoWhereInput): AffectedRowsOutput!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteVideo(where: VideoWhereUniqueInput!): Video
  registerNewUser(email: String!, name: String!, password: String!): String!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): AffectedRowsOutput!
  updateManyVideo(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): AffectedRowsOutput!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  upsertUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertVideo(create: VideoCreateInput!, update: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video!
  videoUpload(forceBucketUpload: Boolean, video: Upload!): String!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): AggregateUser!
  aggregateVideo(cursor: VideoWhereUniqueInput, orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): AggregateVideo!
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  findFirstVideo(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): Video
  groupByUser(by: [UserScalarFieldEnum!]!, having: UserScalarWhereWithAggregatesInput, orderBy: [UserOrderByWithAggregationInput!], skip: Int, take: Int, where: UserWhereInput): [UserGroupBy!]!
  groupByVideo(by: [VideoScalarFieldEnum!]!, having: VideoScalarWhereWithAggregatesInput, orderBy: [VideoOrderByWithAggregationInput!], skip: Int, take: Int, where: VideoWhereInput): [VideoGroupBy!]!
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
  video(where: VideoWhereUniqueInput!): Video
  videos(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): [Video!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _count: UserCount
  email: String
  id: String!
  image: String
  name: String
  oAuthId: String
  role: String!
  videos(cursor: VideoWhereUniqueInput, distinct: [VideoScalarFieldEnum!], orderBy: [VideoOrderByWithRelationInput!], skip: Int, take: Int, where: VideoWhereInput): [Video!]!
}

type UserCount {
  videos: Int!
}

type UserCountAggregate {
  _all: Int!
  email: Int!
  id: Int!
  image: Int!
  name: Int!
  oAuthId: Int!
  password: Int!
  role: Int!
}

input UserCountOrderByAggregateInput {
  email: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  oAuthId: SortOrder
  password: SortOrder
  role: SortOrder
}

input UserCreateInput {
  email: String
  id: String
  image: String
  name: String
  oAuthId: String
  password: String
  role: String
  videos: VideoCreateNestedManyWithoutAuthorInput
}

input UserCreateNestedOneWithoutVideosInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVideosInput
  create: UserCreateWithoutVideosInput
}

input UserCreateOrConnectWithoutVideosInput {
  create: UserCreateWithoutVideosInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutVideosInput {
  email: String
  id: String
  image: String
  name: String
  oAuthId: String
  password: String
  role: String
}

type UserGroupBy {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
  email: String
  id: String!
  image: String
  name: String
  oAuthId: String
  password: String
  role: String!
}

type UserMaxAggregate {
  email: String
  id: String
  image: String
  name: String
  oAuthId: String
  password: String
  role: String
}

input UserMaxOrderByAggregateInput {
  email: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  oAuthId: SortOrder
  password: SortOrder
  role: SortOrder
}

type UserMinAggregate {
  email: String
  id: String
  image: String
  name: String
  oAuthId: String
  password: String
  role: String
}

input UserMinOrderByAggregateInput {
  email: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  oAuthId: SortOrder
  password: SortOrder
  role: SortOrder
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  email: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  oAuthId: SortOrder
  password: SortOrder
  role: SortOrder
}

input UserOrderByWithRelationInput {
  email: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  oAuthId: SortOrder
  password: SortOrder
  role: SortOrder
  videos: VideoOrderByRelationAggregateInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldEnum {
  email
  id
  image
  name
  oAuthId
  password
  role
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  email: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  oAuthId: StringNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  role: StringWithAggregatesFilter
}

input UserUpdateInput {
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  oAuthId: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  oAuthId: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: StringFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutVideosInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVideosInput
  create: UserCreateWithoutVideosInput
  update: UserUpdateWithoutVideosInput
  upsert: UserUpsertWithoutVideosInput
}

input UserUpdateWithoutVideosInput {
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  oAuthId: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: StringFieldUpdateOperationsInput
}

input UserUpsertWithoutVideosInput {
  create: UserCreateWithoutVideosInput!
  update: UserUpdateWithoutVideosInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  email: StringNullableFilter
  id: StringFilter
  image: StringNullableFilter
  name: StringNullableFilter
  oAuthId: StringNullableFilter
  password: StringNullableFilter
  role: StringFilter
  videos: VideoListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
  oAuthId: String
}

type Video {
  author: User!
  authorId: String!
  createdAt: DateTime!
  description: String
  id: String!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type VideoCountAggregate {
  _all: Int!
  authorId: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  published: Int!
  title: Int!
  updatedAt: Int!
}

input VideoCountOrderByAggregateInput {
  authorId: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input VideoCreateInput {
  author: UserCreateNestedOneWithoutVideosInput!
  createdAt: DateTime
  description: String
  id: String
  published: Boolean
  title: String!
  updatedAt: DateTime
}

input VideoCreateNestedManyWithoutAuthorInput {
  connect: [VideoWhereUniqueInput!]
  connectOrCreate: [VideoCreateOrConnectWithoutAuthorInput!]
  create: [VideoCreateWithoutAuthorInput!]
}

input VideoCreateOrConnectWithoutAuthorInput {
  create: VideoCreateWithoutAuthorInput!
  where: VideoWhereUniqueInput!
}

input VideoCreateWithoutAuthorInput {
  createdAt: DateTime
  description: String
  id: String
  published: Boolean
  title: String!
  updatedAt: DateTime
}

type VideoGroupBy {
  _count: VideoCountAggregate
  _max: VideoMaxAggregate
  _min: VideoMinAggregate
  authorId: String!
  createdAt: DateTime!
  description: String
  id: String!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

input VideoListRelationFilter {
  every: VideoWhereInput
  none: VideoWhereInput
  some: VideoWhereInput
}

type VideoMaxAggregate {
  authorId: String
  createdAt: DateTime
  description: String
  id: String
  published: Boolean
  title: String
  updatedAt: DateTime
}

input VideoMaxOrderByAggregateInput {
  authorId: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type VideoMinAggregate {
  authorId: String
  createdAt: DateTime
  description: String
  id: String
  published: Boolean
  title: String
  updatedAt: DateTime
}

input VideoMinOrderByAggregateInput {
  authorId: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input VideoOrderByRelationAggregateInput {
  _count: SortOrder
}

input VideoOrderByWithAggregationInput {
  _count: VideoCountOrderByAggregateInput
  _max: VideoMaxOrderByAggregateInput
  _min: VideoMinOrderByAggregateInput
  authorId: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input VideoOrderByWithRelationInput {
  author: UserOrderByWithRelationInput
  authorId: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

enum VideoScalarFieldEnum {
  authorId
  createdAt
  description
  id
  published
  title
  updatedAt
}

input VideoScalarWhereInput {
  AND: [VideoScalarWhereInput!]
  NOT: [VideoScalarWhereInput!]
  OR: [VideoScalarWhereInput!]
  authorId: StringFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input VideoScalarWhereWithAggregatesInput {
  AND: [VideoScalarWhereWithAggregatesInput!]
  NOT: [VideoScalarWhereWithAggregatesInput!]
  OR: [VideoScalarWhereWithAggregatesInput!]
  authorId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  published: BoolWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input VideoUpdateInput {
  author: UserUpdateOneRequiredWithoutVideosInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VideoUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VideoUpdateManyWithWhereWithoutAuthorInput {
  data: VideoUpdateManyMutationInput!
  where: VideoScalarWhereInput!
}

input VideoUpdateManyWithoutAuthorInput {
  connect: [VideoWhereUniqueInput!]
  connectOrCreate: [VideoCreateOrConnectWithoutAuthorInput!]
  create: [VideoCreateWithoutAuthorInput!]
  delete: [VideoWhereUniqueInput!]
  deleteMany: [VideoScalarWhereInput!]
  disconnect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [VideoUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutAuthorInput!]
}

input VideoUpdateWithWhereUniqueWithoutAuthorInput {
  data: VideoUpdateWithoutAuthorInput!
  where: VideoWhereUniqueInput!
}

input VideoUpdateWithoutAuthorInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VideoUpsertWithWhereUniqueWithoutAuthorInput {
  create: VideoCreateWithoutAuthorInput!
  update: VideoUpdateWithoutAuthorInput!
  where: VideoWhereUniqueInput!
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  author: UserRelationFilter
  authorId: StringFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input VideoWhereUniqueInput {
  id: String
}
