name: Mojo on Github Actions

on: [pull_request, push]

# env:
#   PROJECT_ID: ${{ secrets.GCP_PROJECT }}
#   REGION: europe-west1
#   SERVICE: mojo
#   DEPLOY_SERVICE: mojo-${{ github.ref_name }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Pull code
        uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "yarn"
      - name: Install dependencies
        run: SKIP_POSTINSTALL=1 yarn install --frozen-lockfile
      - name: Setup build
        run: yarn setup
      - name: Checking lint
        run: yarn lint
      - name: Build nextjss
        run: yarn build:next
      - name: Build server
        run: yarn build:server
      - name: Running tests
        run: yarn test
      - name: Check circular deps
        run: madge ./.next && madge ./dist
      - name: Check outdated packages
        run: yarn outdated

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Service to deploy
  #       run: echo $DEPLOY_SERVICE
  #     - name: Pull code
  #       uses: actions/checkout@v2
  #     - name: Use Node.js 16.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "16.x"
  #         cache: "yarn"
  #     - uses: satackey/action-docker-layer-caching@v0.0.11
  #       continue-on-error: true
  #     - id: auth
  #       uses: google-github-actions/auth@v0
  #       with:
  #         credentials_json: "${{ secrets.GCP_SA_KEY }}"
  #     - name: Setup Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v0
  #       with:
  #         project_id: ${{ env.PROJECT_ID }}
  #         # service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: Authorize Docker push
  #       run: gcloud auth configure-docker
  #     - name: Build Container
  #       run: |-
  #         docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} .
  #     - name: Push Container
  #       run: |-
  #         docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
  #     - name: Deploy to Cloud Run
  #       id: deploy
  #       uses: google-github-actions/deploy-cloudrun@v0
  #       with:
  #         service: ${{ env.DEPLOY_SERVICE }}
  #         image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
  #         region: ${{ env.REGION }}
  #         env_vars: "PRISMA_DATABASE_URL=file:./db/sqlite.db"

  #     - name: Show Output
  #       run: echo ${{ steps.deploy.outputs.url }}
